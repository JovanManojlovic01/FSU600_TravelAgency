@page "/destination-update/{id:int}"
@using TravelAgency.Repositories
@inject DestinationRepository DestinationRepo
@inject NavigationManager GoTo
@rendermode InteractiveServer

<div class="container mt-5">
    <h1 class="display-5 fw-bold text-primary text-center">Update Destination</h1>
    <p class="text-muted text-center">Modify the details of the selected destination.</p>

    @if (DestinationToUpdate == null)
    {
        <p class="text-center text-muted">Loading destination details...</p>
    }
    else
    {
        <div class="card shadow-sm p-4 mt-4">
            <form>
                <div class="mb-3">
                    <label class="form-label fw-bold">Name:</label>
                    <input type="text" class="form-control" @bind="DestinationToUpdate.Name" />
                </div>
                <div class="mb-3">
                    <label class="form-label fw-bold">Description:</label>
                    <textarea class="form-control" rows="3" @bind="DestinationToUpdate.Description"></textarea>
                </div>
                <div class="mb-3">
                    <label class="form-label fw-bold">Price (€):</label>
                    <input type="number" class="form-control" @bind="DestinationToUpdate.Price" />
                </div>
                <div class="d-flex justify-content-end mt-4">
                    <button type="button" class="btn btn-success me-2" @onclick="SubmitUpdatedDestination">
                        <i class="bi bi-save"></i> Save
                    </button>
                    <button type="button" class="btn btn-outline-secondary" @onclick="Cancel">
                        Cancel
                    </button>
                </div>
            </form>
        </div>
    }
</div>

@code
{
    [Parameter]
    public int Id { get; set; }

    private TravelAgency.Models.Destination? DestinationToUpdate;

    protected override async Task OnInitializedAsync()
    {
        DestinationToUpdate = await DestinationRepo.GetDestinationByIdAsync(Id);
    }

    private async Task SubmitUpdatedDestination()
    {
        if (DestinationToUpdate != null)
        {
            await DestinationRepo.UpdateDestinationAsync(DestinationToUpdate);
            GoTo.NavigateTo("/destinations");
        }
    }

    private void Cancel()
    {
        GoTo.NavigateTo("/destinations");
    }
}
