@page "/customers"
@using TravelAgency.Repositories
@inject CustomerRepository CustomerRepo
@inject NavigationManager GoTo
@rendermode InteractiveServer

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

<div class="container mt-5">
    <h1 class="display-5 fw-bold text-primary text-center">Manage Customers</h1>

    <div class="d-flex justify-content-between align-items-center my-4">
        <h3 class="fw-bold text-secondary">Customer List</h3>
        <button class="btn btn-success btn-lg shadow-sm" @onclick="NavigateToAdd">
            <i class="bi bi-person-plus"></i> Add Customer
        </button>
    </div>

    <div class="table-responsive">
        <table class="table table-hover table-bordered align-middle shadow-sm">
            <thead class="table-dark">
                <tr>
                    <th>Name</th>
                    <th>E-mail Address</th>
                    <th>Phone Number</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Customers.Count == 0)
                {
                    <tr>
                        <td colspan="4" class="text-center text-muted">
                            <em>No customers found. Please add a customer.</em>
                        </td>
                    </tr>
                }
                else
                {
                    @foreach (var customer in Customers)
                    {
                        <tr>
                            <td class="fw-bold">@customer.Name</td>
                            <td>@customer.Email</td>
                            <td>@customer.PhoneNumber</td>
                            <td>
                                <button class="btn btn-warning btn-sm shadow-sm me-2" @onclick="() => NavigateToUpdate(customer.Id)">
                                    <i class="bi bi-pencil-fill"></i> Update
                                </button>
                                <button class="btn btn-danger btn-sm shadow-sm" @onclick="() => NavigateToDelete(customer.Id)">
                                    <i class="bi bi-trash-fill"></i> Delete
                                </button>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-end mt-4">
        <button class="btn btn-outline-primary btn-lg shadow-sm" @onclick="NavigateToHome">
            <i class="bi bi-house-door"></i> Back to Home
        </button>
    </div>
</div>

@code
{
    private List<TravelAgency.Models.Customer> Customers = new();

    protected override async Task OnInitializedAsync()
    {
        Customers = await CustomerRepo.GetCustomersAsync();
    }

    private void NavigateToAdd()
    {
        GoTo.NavigateTo("/customers-add");
    }

    private void NavigateToHome()
    {
        GoTo.NavigateTo("/");
    }

    private void NavigateToUpdate(int id)
    {
        GoTo.NavigateTo($"/customers-update/{id}");
    }

    private void NavigateToDelete(int id)
    {
        GoTo.NavigateTo($"/customers-delete/{id}");
    }
}