@page "/customers-update/{id:int}"
@using TravelAgency.Repositories
@inject CustomerRepository CustomerRepo
@inject NavigationManager GoTo
@rendermode InteractiveServer

<h3>Update Customer Information</h3>

@if (CustomerToUpdate == null)
{
    <p>Loading Customer details...</p>
}
else
{
    <div>
        <form>
            <div>
                <label>Name:</label>
                <input type="text" @bind="CustomerToUpdate.Name" />
            </div>
            <div>
                <label>E-mail Address:</label>
                <input type="text" @bind="CustomerToUpdate.Email" />
            </div>
            <div>
                <label>Phone Number (Country Code Included):</label>
                <input type="text" @bind="CustomerToUpdate.PhoneNumber" />
            </div>
            <br />
            <button type="button" @onclick="SubmitUpdatedCustomer">Save</button>
            <button type="button" @onclick="Cancel">Cancel</button>
        </form>
    </div>
}

@code 
{
    [Parameter]
    public int Id { get; set; }

    private TravelAgency.Models.Customer? CustomerToUpdate;

    protected override async Task OnInitializedAsync()
    {
        CustomerToUpdate = await CustomerRepo.GetCustomerByIdAsync(Id);
    }

    private async Task SubmitUpdatedCustomer()
    {
        if (CustomerToUpdate != null)
        {
            await CustomerRepo.UpdateCustomerAsync(CustomerToUpdate);
            GoTo.NavigateTo("/customers");
        }
    }

    private void Cancel()
    {
        GoTo.NavigateTo("/customers");
    }
}
