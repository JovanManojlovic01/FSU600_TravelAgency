@page "/customers-update/{id:int}"
@using TravelAgency.Repositories
@inject CustomerRepository CustomerRepo
@inject NavigationManager GoTo
@rendermode InteractiveServer

<div class="container mt-5">
    <h1 class="display-5 fw-bold text-primary text-center">Update Customer Information</h1>
    <p class="text-muted text-center">Edit the details of the selected customer below.</p>

    @if (CustomerToUpdate == null)
    {
        <p class="text-center text-muted">Loading customer details...</p>
    }
    else
    {
        <div class="card shadow-sm p-4 mt-4">
            <form>
                <div class="mb-3">
                    <label class="form-label fw-bold">Name:</label>
                    <input type="text" class="form-control" @bind="CustomerToUpdate.Name" />
                </div>
                <div class="mb-3">
                    <label class="form-label fw-bold">E-mail Address:</label>
                    <input type="text" class="form-control" @bind="CustomerToUpdate.Email" />
                </div>
                <div class="mb-3">
                    <label class="form-label fw-bold">Phone Number (Country Code Included):</label>
                    <input type="text" class="form-control" @bind="CustomerToUpdate.PhoneNumber" />
                </div>
                <div class="d-flex justify-content-end mt-4">
                    <button type="button" class="btn btn-success me-2" @onclick="SubmitUpdatedCustomer">
                        <i class="bi bi-save"></i> Save
                    </button>
                    <button type="button" class="btn btn-outline-secondary" @onclick="Cancel">
                        Cancel
                    </button>
                </div>
            </form>
        </div>
    }
</div>

@code
{
    [Parameter]
    public int Id { get; set; }

    private TravelAgency.Models.Customer? CustomerToUpdate;

    protected override async Task OnInitializedAsync()
    {
        CustomerToUpdate = await CustomerRepo.GetCustomerByIdAsync(Id);
    }

    private async Task SubmitUpdatedCustomer()
    {
        if (CustomerToUpdate != null)
        {
            await CustomerRepo.UpdateCustomerAsync(CustomerToUpdate);
            GoTo.NavigateTo("/customers");
        }
    }

    private void Cancel()
    {
        GoTo.NavigateTo("/customers");
    }
}
