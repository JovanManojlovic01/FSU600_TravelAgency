@page "/customers-delete/{id:int}"
@using TravelAgency.Repositories
@inject CustomerRepository CustomerRepo
@inject NavigationManager GoTo
@rendermode InteractiveServer

<div class="container mt-5">
    <h1 class="display-5 fw-bold text-danger text-center">Delete Customer</h1>
    <p class="text-muted text-center">Are you sure you want to delete this customer?</p>

    @if (CustomerToDelete == null)
    {
        <p class="text-center text-muted">Loading customer details...</p>
    }
    else
    {
        <div class="card shadow-sm p-4 mt-4 text-center">
            <p class="fw-bold">You are about to delete:</p>
            <h4 class="text-primary fw-bold">@CustomerToDelete.Name</h4>
            <p class="text-muted">@CustomerToDelete.Email</p>
            <p class="text-danger fw-bold">Phone: @CustomerToDelete.PhoneNumber</p>

            <div class="d-flex justify-content-center mt-4">
                <button class="btn btn-danger me-2" @onclick="ConfirmDelete">
                    <i class="bi bi-trash-fill"></i> Delete
                </button>
                <button class="btn btn-outline-secondary" @onclick="Cancel">
                    Cancel
                </button>
            </div>
        </div>
    }
</div>

@code 
{
    [Parameter]
    public int Id { get; set; }
    private TravelAgency.Models.Customer? CustomerToDelete;

    protected override async Task OnInitializedAsync()
    {
        CustomerToDelete = await CustomerRepo.GetCustomerByIdAsync(Id);
    }

    private async Task ConfirmDelete()
    {
        if (CustomerToDelete != null)
        {
            await CustomerRepo.DeleteCustomerAsync(CustomerToDelete.Id);
            GoTo.NavigateTo("/customers");
        }
    }

    private void Cancel()
    {
        GoTo.NavigateTo("/customers");
    }

}
