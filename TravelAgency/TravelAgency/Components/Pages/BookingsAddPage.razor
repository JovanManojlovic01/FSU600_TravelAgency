@page "/bookings-add"
@using TravelAgency.Models
@using TravelAgency.Repositories
@inject BookingRepository BookingRepo
@inject CustomerRepository CustomerRepo
@inject DestinationRepository DestinationRepo
@inject NavigationManager GoTo
@rendermode InteractiveServer

<div class="container mt-5">
    <h1 class="display-5 fw-bold text-primary text-center">Add New Booking</h1>
    <p class="text-muted text-center">Select a customer and destination to create a new booking.</p>

    <div class="card shadow-sm p-4 mt-4">
        <form>
            <div class="mb-3">
                <label for="customer" class="form-label fw-bold">Select Customer:</label>
                <select id="customer" class="form-select" @bind="SelectedCustomerId">
                    <option value="" disabled>Select a customer</option>
                    @foreach (var customer in Customers)
                    {
                        <option value="@customer.Id">@customer.Name (@customer.Email)</option>
                    }
                </select>
            </div>
            <div class="mb-3">
                <label for="destination" class="form-label fw-bold">Select Destination:</label>
                <select id="destination" class="form-select" @bind="SelectedDestinationId">
                    <option value="" disabled>Select a destination</option>
                    @foreach (var destination in Destinations)
                    {
                        <option value="@destination.Id">@destination.Name (€@destination.Price)</option>
                    }
                </select>
            </div>
            <div class="mb-3">
                <label for="bookingTime" class="form-label fw-bold">Booking Date & Time:</label>
                <input type="datetime-local" id="bookingTime" class="form-control" @bind="BookingTime" />
            </div>
            <div class="d-flex justify-content-end mt-4">
                <button type="button" class="btn btn-success me-2" @onclick="SubmitBooking">
                    <i class="bi bi-save"></i> Create Booking
                </button>
                <button type="button" class="btn btn-outline-secondary" @onclick="Cancel">
                    Cancel
                </button>
            </div>
        </form>
    </div>
</div>

@code
{
    private List<Customer> Customers = new();
    private List<Destination> Destinations = new();

    private int SelectedCustomerId { get; set; }
    private int SelectedDestinationId { get; set; }
    private DateTime BookingTime { get; set; } = DateTime.Now;

    protected override async Task OnInitializedAsync()
    {
        Customers = await CustomerRepo.GetCustomersAsync();
        Destinations = await DestinationRepo.GetDestinationsAsync();
    }

    private async Task SubmitBooking()
    {
        if (SelectedCustomerId == 0 || SelectedDestinationId == 0)
        {
            Console.WriteLine("Both customer and destination must be selected.");
            return;
        }

        var newBooking = new Booking
            {
                customerID = SelectedCustomerId,
                destinationID = SelectedDestinationId,
                bookingTime = BookingTime
            };

        await BookingRepo.AddBookingAsync(newBooking);
        GoTo.NavigateTo("/bookings");
    }

    private void Cancel()
    {
        GoTo.NavigateTo("/bookings");
    }
}
